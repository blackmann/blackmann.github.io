---
import type { GetStaticPaths } from 'astro'
import Shell from '../../layouts/Shell.astro'
import { getCollection } from 'astro:content'
import DotLocalAd from '../../components/DotLocalAd.astro'
import { CourseOutline } from '../../components/CourseOutline.tsx'

type Unpacked<T> = T extends (infer U)[] ? U : T

export const getStaticPaths = (async () => {
  const lessons = await getCollection('lessons')
  lessons.sort((a, b) => a.data.index - b.data.index)
  const courseMeta = await getCollection('course-meta')

  type Content = Unpacked<typeof lessons>

  const outlines: Record<string, Content[]> = lessons.reduce(
    (prev, curr) => {
      const courseId = curr.slug.split('/')[0]
      if (!prev[courseId]) {
        prev[courseId] = []
      }

      prev[courseId].push(curr)

      return prev
    },
    {} as Record<string, Content[]>,
  )

  return lessons.map((lesson) => {
    const courseId = lesson.slug.split('/')[0]
    const outline = outlines[courseId]

    const index = outline.findIndex((chapter) => chapter.slug === lesson.slug)
    const progress = ((index + 1) / outline.length) * 100

    return {
      params: { slug: lesson.slug },
      props: {
        content: lesson,
        meta: courseMeta.find((cm) => cm.id === courseId),
        next: outline[index + 1],
        outline,
        progress,
      },
    }
  })
}) satisfies GetStaticPaths

const { content, meta, outline, progress, next } = Astro.props
const { slug } = Astro.params

const { Content } = await content.render()
---

<Shell description="" title={`${content.data.title} | ${meta?.data.title}`}>
  <div class="container">
    <div class="mt-[8rem] grid grid-cols-1 gap-4 lg:grid-cols-4">
      <aside class="lg:(top-0 static) sticky top-4 z-10 col-span-1">
        <div class="lg:(top-4 sticky)">
          <CourseOutline
            courseTitle={meta?.data.title!}
            outline={outline}
            progress={progress}
            currentChapter={slug}
            client:load
          />

          <div class="mt-2 hidden w-[8rem] lg:block">
            <DotLocalAd />
          </div>
        </div>
      </aside>

      <div class="col-span-1 lg:col-span-3">
        <header>
          <p
            class="dark:text-orange inline rounded-xl bg-orange-200 bg-opacity-20 px-2 py-1 font-medium text-orange-600 dark:bg-orange-600 dark:bg-opacity-10">
            {meta?.data.title}
          </p>
          <h1 class="mt-0 text-3xl font-bold">
            {content.data.title}
          </h1>
        </header>

        <article class="mt-4">
          <Content />
        </article>

        <div class="mt-12 grid grid-cols-2 gap-2 lg:grid-cols-3">
          {
            content.data.related_commit && (
              <a
                href={content.data.related_commit}
                target="_blank"
                class="col-span-1 flex gap-2 rounded-lg border border-zinc-200 px-2 py-1 no-underline hover:bg-zinc-200 dark:border-neutral-700 dark:hover:bg-neutral-800">
                <span class="i-lucide-github mt-1 size-4" title="Github" />

                <div>
                  <header class="font-medium">
                    Related commit{' '}
                    <div class="i-lucide-external-link inline-block !text-sm" />
                  </header>
                  <div class="text-secondary line-clamp-1">
                    {content.data.related_commit
                      .split('/')
                      .pop()
                      ?.substring(26)}
                  </div>
                </div>
              </a>
            )
          }

          {
            next && (
              <div class="col-span-1 col-start-2 flex justify-end lg:col-start-3">
                <a
                  href={`/courses/${next.slug}`}
                  class="group inline-flex gap-2 rounded-lg border border-zinc-300 !bg-opacity-75 px-2 py-1 no-underline transition-[background] duration-200 hover:bg-zinc-200 dark:border-neutral-800 dark:hover:bg-neutral-800">
                  <div>
                    <header class="text-secondary">Up next</header>
                    <div class="font-medium">{next.data.title}</div>
                  </div>

                  <div class="i-lucide-arrow-right text-secondary -mt-1 !text-lg transition-transform group-hover:translate-x-2 mt-1" />
                </a>
              </div>
            )
          }
        </div>
      </div>
    </div>
  </div>
</Shell>
