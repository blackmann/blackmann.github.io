---
import Shell from '../../layouts/Shell.astro'
import { getCollection } from 'astro:content'

const lessons = await getCollection('lessons')
const courseMeta = await getCollection('course-meta')

type Unpacked<T> = T extends (infer U)[] ? U : T

type Course = { chapters: number; slug: string } & Unpacked<typeof courseMeta>

const courses: Course[] = []

for (const meta of courseMeta) {
  const chapters = lessons.filter((ex) =>
    ex.id.startsWith(`${meta.id}/`),
  ).length

  const course: Course = {
    slug: `/courses/${meta.id}/intro`,
    chapters,
    ...meta,
  }

  courses.push(course)
}
---

<Shell
  description="Up your skills with fairly challenging courses"
  title="Courses">
  <div class="container min-h-[50vh]">
    <h1 class="mt-[8rem] text-2xl font-bold">Courses</h1>

    <p>
      Up your skills with fairly challenging courses. Typically requires a
      weekend.
    </p>

    <div class="grid grid-cols-1 gap-4 lg:grid-cols-3">
      {
        courses.map((course) => (
          <div class="col-span-1">
            <a
              class="card block no-underline transition-[border] duration-200 hover:border-zinc-300 dark:hover:border-neutral-600"
              href={course.slug}>
              <h2 class="font-bold">{course.data.title}</h2>
              <p>{course.data.description}</p>
              <p class="text-secondary">{course.data.meta}</p>

              <div class="flex gap-2">
                <span class="rounded-lg bg-zinc-200 px-2 text-sm font-medium dark:bg-neutral-700">
                  {course.chapters} chapters
                </span>

                {course.data.tags.map((tag) => (
                  <span class="rounded-lg bg-pink-100 px-2 text-sm font-medium text-pink-500 dark:bg-pink-700 dark:bg-opacity-10 dark:text-pink-400">
                    {tag}
                  </span>
                ))}
              </div>
            </a>
          </div>
        ))
      }
    </div>
  </div>
</Shell>
