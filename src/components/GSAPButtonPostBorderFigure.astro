<canvas class="bg-zinc-200 dark:bg-neutral-800"> </canvas>

<script>
  import { canvas } from '../lib/canvas'

  const config = {
    height: 0.3,
  }

  canvas(
    'canvas',
    (ctx, config) => {
      const { x: originX, y: originY } = {
        x: config.width / 2,
        y: config.height / 2,
      }

      // draw button

      const buttonWidth = config.width * 0.25
      const buttonHeight = config.height * 0.17

      const buttonX = originX - buttonWidth / 2
      const buttonY = originY - buttonHeight / 2

      const hoverCircleRadius = (buttonWidth / 2) * 1.5
      const hoverCircleX = originX
      const hoverCircleY = originY

      {
        // outer circle cut
        ctx.beginPath()
        ctx.fillStyle = config.colors.light
        ctx.lineWidth = 3
        ctx.roundRect(
          buttonX,
          buttonY,
          buttonWidth,
          buttonHeight,
          buttonHeight / 2,
        )
        ctx.fill()

        ctx.globalCompositeOperation = 'xor'

        ctx.arc(
          config.mouseX ?? hoverCircleX,
          config.mouseY ?? hoverCircleY,
          hoverCircleRadius,
          0,
          Math.PI * 2,
        )
        ctx.fill()

        ctx.globalCompositeOperation = 'source-over'
      }

      {
        // inner intersection
        ctx.beginPath()
        ctx.fillStyle = config.colors.dark
        ctx.roundRect(
          buttonX,
          buttonY,
          buttonWidth,
          buttonHeight,
          buttonHeight / 2,
        )
        ctx.fill()

        ctx.globalCompositeOperation = 'destination-in'

        ctx.beginPath()
        ctx.arc(
          config.mouseX ?? hoverCircleX,
          config.mouseY ?? hoverCircleY,
          hoverCircleRadius,
          0,
          Math.PI * 2,
        )
        ctx.fill()

        ctx.globalCompositeOperation = 'source-over'
      }

      {
        // stroke
        ctx.beginPath()
        ctx.fillStyle = '#fefefe'
        ctx.lineWidth = 3
        ctx.strokeStyle = config.colors.dark
        ctx.roundRect(
          buttonX,
          buttonY,
          buttonWidth,
          buttonHeight,
          buttonHeight / 2,
        )
        // ctx.fill()
        ctx.stroke()
      }
    },
    config,
  )
</script>
